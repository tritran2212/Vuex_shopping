{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\n// SỬA LỖI: Đường dẫn import đúng\nimport ApiService from '@/services/ApiService.js';\nexport const namespaced = true;\nexport const state = {\n  all: [],\n  categories: [],\n  // SỬA LỖI: Lỗi chính tả 'ide' -> 'idle'\n  status: 'idle',\n  searchQuery: '',\n  selectedCategory: 'all'\n};\nexport const mutations = {\n  // SỬA LỖI: Đổi tên cho nhất quán (tùy chọn nhưng nên làm)\n  SET_PRODUCTS(state, products) {\n    state.all = products;\n  },\n  SET_CATEGORIES(state, categories) {\n    // SỬA LỖI: Dùng đúng tham số\n    state.categories = categories;\n  },\n  SET_STATUS(state, status) {\n    state.status = status;\n  },\n  SET_SEARCH_QUERY(state, query) {\n    // SỬA LỖI: Dùng đúng tham số\n    state.searchQuery = query;\n  },\n  // SỬA LỖI: Đổi tên cho nhất quán và dùng đúng tham số\n  SET_SELECTED_CATEGORY(state, category) {\n    state.selectedCategory = category;\n  }\n};\nexport const actions = {\n  async fetchAll({\n    commit\n  }) {\n    commit('SET_STATUS', 'loading');\n    try {\n      const [productsResponse, categoriesResponse] = await Promise.all([\n      // SỬA LỖI: Gọi đúng tên phương thức trong ApiService\n      ApiService.getProducts(), ApiService.getCategories()]);\n      commit('SET_PRODUCTS', productsResponse.data);\n      commit('SET_CATEGORIES', categoriesResponse.data);\n      commit('SET_STATUS', 'success');\n    } catch (error) {\n      console.error('Loi API ', error);\n      commit('SET_STATUS', 'error');\n    }\n  },\n  updateSearchQuery({\n    commit\n  }, query) {\n    commit('SET_SEARCH_QUERY', query);\n  },\n  // SỬA LỖI: Lỗi chính tả 'updata' -> 'update'\n  updateSelectedCategory({\n    commit\n  }, category) {\n    // SỬA LỖI: Commit tới đúng mutation\n    commit('SET_SELECTED_CATEGORY', category);\n  }\n};\nexport const getters = {\n  // SỬA LỖI: Đổi tên cho nhất quán với HomeView\n  filteredProducts: state => {\n    let products = state.all;\n    if (state.selectedCategory !== 'all') {\n      products = products.filter(p => p.category === state.selectedCategory);\n    }\n    if (state.searchQuery) {\n      const query = state.searchQuery.toLowerCase();\n      products = products.filter(p => p.title.toLowerCase().includes(query));\n    }\n    return products;\n  },\n  // SỬA LỖI: Sai cú pháp getter và lỗi logic nghiêm trọng (gán '=' thay vì so sánh '===')\n  getProductById: state => id => {\n    return state.all.find(p => p.id === Number(id));\n  }\n};","map":{"version":3,"names":["ApiService","namespaced","state","all","categories","status","searchQuery","selectedCategory","mutations","SET_PRODUCTS","products","SET_CATEGORIES","SET_STATUS","SET_SEARCH_QUERY","query","SET_SELECTED_CATEGORY","category","actions","fetchAll","commit","productsResponse","categoriesResponse","Promise","getProducts","getCategories","data","error","console","updateSearchQuery","updateSelectedCategory","getters","filteredProducts","filter","p","toLowerCase","title","includes","getProductById","id","find","Number"],"sources":["C:/Users/ADMIN/Documents/SourceVue2JS/VueX_SellProduct/sell-product/src/store/modules/products.js"],"sourcesContent":["// SỬA LỖI: Đường dẫn import đúng\r\nimport ApiService from '@/services/ApiService.js';\r\n\r\nexport const namespaced = true;\r\n\r\nexport const state = {\r\n    all: [],\r\n    categories: [],\r\n    // SỬA LỖI: Lỗi chính tả 'ide' -> 'idle'\r\n    status: 'idle',\r\n    searchQuery: '',\r\n    selectedCategory: 'all',\r\n};\r\n\r\nexport const mutations = {\r\n    // SỬA LỖI: Đổi tên cho nhất quán (tùy chọn nhưng nên làm)\r\n    SET_PRODUCTS(state, products) {\r\n        state.all = products;\r\n    },\r\n    SET_CATEGORIES(state, categories) {\r\n        // SỬA LỖI: Dùng đúng tham số\r\n        state.categories = categories;\r\n    },\r\n    SET_STATUS(state, status) {\r\n        state.status = status;\r\n    },\r\n    SET_SEARCH_QUERY(state, query) {\r\n        // SỬA LỖI: Dùng đúng tham số\r\n        state.searchQuery = query;\r\n    },\r\n    // SỬA LỖI: Đổi tên cho nhất quán và dùng đúng tham số\r\n    SET_SELECTED_CATEGORY(state, category) {\r\n        state.selectedCategory = category;\r\n    },\r\n};\r\n\r\nexport const actions = {\r\n    async fetchAll({ commit }) {\r\n        commit('SET_STATUS', 'loading');\r\n        try {\r\n            const [productsResponse, categoriesResponse] = await Promise.all([\r\n                // SỬA LỖI: Gọi đúng tên phương thức trong ApiService\r\n                ApiService.getProducts(),\r\n                ApiService.getCategories(),\r\n            ]);\r\n\r\n            commit('SET_PRODUCTS', productsResponse.data);\r\n            commit('SET_CATEGORIES', categoriesResponse.data);\r\n            commit('SET_STATUS', 'success');\r\n        } catch (error) {\r\n            console.error('Loi API ', error);\r\n            commit('SET_STATUS', 'error');\r\n        }\r\n    },\r\n    updateSearchQuery({ commit }, query) {\r\n        commit('SET_SEARCH_QUERY', query);\r\n    },\r\n    // SỬA LỖI: Lỗi chính tả 'updata' -> 'update'\r\n    updateSelectedCategory({ commit }, category) {\r\n        // SỬA LỖI: Commit tới đúng mutation\r\n        commit('SET_SELECTED_CATEGORY', category);\r\n    },\r\n};\r\n\r\nexport const getters = {\r\n    // SỬA LỖI: Đổi tên cho nhất quán với HomeView\r\n    filteredProducts: (state) => {\r\n        let products = state.all;\r\n\r\n        if (state.selectedCategory !== 'all') {\r\n            products = products.filter(p => p.category === state.selectedCategory);\r\n        }\r\n        if (state.searchQuery) {\r\n            const query = state.searchQuery.toLowerCase();\r\n            products = products.filter(p => p.title.toLowerCase().includes(query));\r\n        }\r\n\r\n        return products;\r\n    },\r\n\r\n    // SỬA LỖI: Sai cú pháp getter và lỗi logic nghiêm trọng (gán '=' thay vì so sánh '===')\r\n    getProductById: (state) => (id) => {\r\n        return state.all.find(p => p.id === Number(id));\r\n    },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}