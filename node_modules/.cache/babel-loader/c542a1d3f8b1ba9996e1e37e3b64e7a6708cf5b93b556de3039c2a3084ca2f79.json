{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport ApiService from '@/services/ApiService';\nexport const namespaced = true;\nexport const state = {\n  all: [],\n  // Chứa danh sách sản phẩm gốc từ API\n  categories: [],\n  status: 'idle',\n  // 'idle' | 'loading' | 'success' | 'error'\n  searchQuery: '',\n  selectedCategory: 'all' // 'all' là giá trị mặc định\n};\nexport const mutations = {\n  SET_PRODUCTS(state, products) {\n    state.all = products;\n  },\n  SET_CATEGORIES(state, categories) {\n    state.categories = categories;\n  },\n  SET_STATUS(state, status) {\n    state.status = status;\n  },\n  SET_SEARCH_QUERY(state, query) {\n    state.searchQuery = query;\n  },\n  SET_SELECTED_CATEGORY(state, category) {\n    state.selectedCategory = category;\n  }\n};\nexport const actions = {\n  async fetchAll({\n    commit\n  }) {\n    commit('SET_STATUS', 'loading');\n    try {\n      // Gọi nhiều API cùng lúc\n      const [productsResponse, categoriesResponse] = await Promise.all([ApiService.getProducts(), ApiService.getCategories()]);\n      commit('SET_PRODUCTS', productsResponse.data);\n      commit('SET_CATEGORIES', categoriesResponse.data);\n      commit('SET_STATUS', 'success');\n    } catch (error) {\n      console.error('Lỗi khi tải dữ liệu:', error);\n      commit('SET_STATUS', 'error');\n    }\n  },\n  // Actions để cập nhật bộ lọc\n  updateSearchQuery({\n    commit\n  }, query) {\n    commit('SET_SEARCH_QUERY', query);\n  },\n  updateSelectedCategory({\n    commit\n  }, category) {\n    commit('SET_SELECTED_CATEGORY', category);\n  }\n};\nexport const getters = {\n  // *** GETTER QUAN TRỌNG NHẤT ***\n  // Đây là nơi áp dụng COMPUTED của Vuex. Nó sẽ tự động tính toán lại\n  // mỗi khi state.all, state.searchQuery, hoặc state.selectedCategory thay đổi.\n  filteredProducts: state => {\n    let products = state.all;\n\n    // 1. Lọc theo danh mục\n    if (state.selectedCategory !== 'all') {\n      products = products.filter(p => p.category === state.selectedCategory);\n    }\n\n    // 2. Lọc theo thanh tìm kiếm\n    if (state.searchQuery) {\n      const query = state.searchQuery.toLowerCase();\n      products = products.filter(p => p.title.toLowerCase().includes(query));\n    }\n    return products;\n  },\n  // Getter để lấy 1 sản phẩm theo ID\n  getProductById: state => id => {\n    // Chuyển id từ string sang number để so sánh\n    return state.all.find(p => p.id === Number(id));\n  }\n};","map":{"version":3,"names":["ApiService","namespaced","state","all","categories","status","searchQuery","selectedCategory","mutations","SET_PRODUCTS","products","SET_CATEGORIES","SET_STATUS","SET_SEARCH_QUERY","query","SET_SELECTED_CATEGORY","category","actions","fetchAll","commit","productsResponse","categoriesResponse","Promise","getProducts","getCategories","data","error","console","updateSearchQuery","updateSelectedCategory","getters","filteredProducts","filter","p","toLowerCase","title","includes","getProductById","id","find","Number"],"sources":["C:/Users/ADMIN/Documents/SourceVue2JS/VueX_SellProduct/sell-product/src/store/modules/products.js"],"sourcesContent":["import ApiService from '@/services/ApiService';\r\n\r\nexport const namespaced = true;\r\n\r\nexport const state = {\r\n  all: [], // Chứa danh sách sản phẩm gốc từ API\r\n  categories: [],\r\n  status: 'idle', // 'idle' | 'loading' | 'success' | 'error'\r\n  searchQuery: '',\r\n  selectedCategory: 'all', // 'all' là giá trị mặc định\r\n};\r\n\r\nexport const mutations = {\r\n  SET_PRODUCTS(state, products) {\r\n    state.all = products;\r\n  },\r\n  SET_CATEGORIES(state, categories) {\r\n    state.categories = categories;\r\n  },\r\n  SET_STATUS(state, status) {\r\n    state.status = status;\r\n  },\r\n  SET_SEARCH_QUERY(state, query) {\r\n    state.searchQuery = query;\r\n  },\r\n  SET_SELECTED_CATEGORY(state, category) {\r\n    state.selectedCategory = category;\r\n  },\r\n};\r\n\r\nexport const actions = {\r\n  async fetchAll({ commit }) {\r\n    commit('SET_STATUS', 'loading');\r\n    try {\r\n      // Gọi nhiều API cùng lúc\r\n      const [productsResponse, categoriesResponse] = await Promise.all([\r\n        ApiService.getProducts(),\r\n        ApiService.getCategories(),\r\n      ]);\r\n      commit('SET_PRODUCTS', productsResponse.data);\r\n      commit('SET_CATEGORIES', categoriesResponse.data);\r\n      commit('SET_STATUS', 'success');\r\n    } catch (error) {\r\n      console.error('Lỗi khi tải dữ liệu:', error);\r\n      commit('SET_STATUS', 'error');\r\n    }\r\n  },\r\n  // Actions để cập nhật bộ lọc\r\n  updateSearchQuery({ commit }, query) {\r\n    commit('SET_SEARCH_QUERY', query);\r\n  },\r\n  updateSelectedCategory({ commit }, category) {\r\n    commit('SET_SELECTED_CATEGORY', category);\r\n  },\r\n};\r\n\r\nexport const getters = {\r\n  // *** GETTER QUAN TRỌNG NHẤT ***\r\n  // Đây là nơi áp dụng COMPUTED của Vuex. Nó sẽ tự động tính toán lại\r\n  // mỗi khi state.all, state.searchQuery, hoặc state.selectedCategory thay đổi.\r\n  filteredProducts: (state) => {\r\n    let products = state.all;\r\n\r\n    // 1. Lọc theo danh mục\r\n    if (state.selectedCategory !== 'all') {\r\n      products = products.filter(p => p.category === state.selectedCategory);\r\n    }\r\n\r\n    // 2. Lọc theo thanh tìm kiếm\r\n    if (state.searchQuery) {\r\n      const query = state.searchQuery.toLowerCase();\r\n      products = products.filter(p => p.title.toLowerCase().includes(query));\r\n    }\r\n\r\n    return products;\r\n  },\r\n\r\n  // Getter để lấy 1 sản phẩm theo ID\r\n  getProductById: (state) => (id) => {\r\n    // Chuyển id từ string sang number để so sánh\r\n    return state.all.find(p => p.id === Number(id));\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}