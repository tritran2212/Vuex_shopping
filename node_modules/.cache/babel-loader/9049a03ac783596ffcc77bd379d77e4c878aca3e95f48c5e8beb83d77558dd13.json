{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport const namespaced = true;\nconst saveCartToLocalStorage = cartItems => {\n  localStorage.setItem('cart', JSON.stringify(cartItems));\n};\nconst getCartFromLocalStorage = () => {\n  const cartItems = localStorage.getItem('cart');\n  return cartItems ? JSON.parse(cartItems) : [];\n};\nexport const state = {\n  items: getCartFromLocalStorage()\n};\nexport const mutations = {\n  PUSH_PRODUCT_TO_CART(state, product) {\n    state.items.push({\n      ...product,\n      quantity: 1\n    });\n    saveCartToLocalStorage(state.items);\n  },\n  INCREMENT_ITEM_QUANTITY(state, cartItem) {\n    cartItem.quantity++;\n    saveCartToLocalStorage(state.items);\n  },\n  REMOVE_ITEM_FROM_CART(state, productId) {\n    state.items = state.items.filter(item => item.id !== productId);\n    saveCartToLocalStorage(state.items);\n  }\n};\nexport const actions = {\n  addProductToCart({\n    state,\n    commit\n  }, product) {\n    const cartItem = state.items.find(item => item.id === product.id);\n    if (cartItem) {\n      commit('INCREMENT_ITEM_QUANTITY', cartItem);\n    } else {\n      commit('PUSH_PRODUCT_TO_CART', product);\n    }\n  },\n  removeProductFromCart({\n    commit\n  }, productId) {\n    commit('REMOVE_ITEM_FROM_CART', productId);\n  }\n};\nexport const getters = {\n  cartItems: state => state.items,\n  cartItemCount: state => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  },\n  cartTotalPrice: state => {\n    return state.items.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\n  }\n};","map":{"version":3,"names":["namespaced","saveCartToLocalStorage","cartItems","localStorage","setItem","JSON","stringify","getCartFromLocalStorage","getItem","parse","state","items","mutations","PUSH_PRODUCT_TO_CART","product","push","quantity","INCREMENT_ITEM_QUANTITY","cartItem","REMOVE_ITEM_FROM_CART","productId","filter","item","id","actions","addProductToCart","commit","find","removeProductFromCart","getters","cartItemCount","reduce","total","cartTotalPrice","price","toFixed"],"sources":["C:/Users/ADMIN/Documents/SourceVue2JS/VueX_SellProduct/sell-product/src/store/modules/cart.js"],"sourcesContent":["export const namespaced = true;\r\nconst saveCartToLocalStorage = (cartItems) => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n};\r\n\r\nconst getCartFromLocalStorage = () => {\r\n    const cartItems = localStorage.getItem('cart');\r\n    return cartItems ? JSON.parse(cartItems) : [];\r\n};\r\nexport const state = {\r\n    items: getCartFromLocalStorage(),\r\n};\r\nexport const mutations = {\r\n    PUSH_PRODUCT_TO_CART(state, product) {\r\n        state.items.push({ ...product, quantity: 1 });\r\n        saveCartToLocalStorage(state.items);\r\n    },\r\n    INCREMENT_ITEM_QUANTITY(state, cartItem) {\r\n        cartItem.quantity++;\r\n        saveCartToLocalStorage(state.items);\r\n    },\r\n    REMOVE_ITEM_FROM_CART(state, productId) {\r\n        state.items = state.items.filter((item) => item.id !== productId);\r\n        saveCartToLocalStorage(state.items);\r\n    },\r\n};\r\n\r\nexport const actions = {\r\n    addProductToCart({ state, commit }, product) {\r\n        const cartItem = state.items.find((item) => item.id === product.id);\r\n        if (cartItem) {\r\n            commit('INCREMENT_ITEM_QUANTITY', cartItem);\r\n        } else {\r\n            commit('PUSH_PRODUCT_TO_CART', product);\r\n        }\r\n    },\r\n    removeProductFromCart({ commit }, productId) {\r\n        commit('REMOVE_ITEM_FROM_CART', productId);\r\n    },\r\n};\r\nexport const getters = {\r\n    cartItems: (state) => state.items,\r\n    cartItemCount: (state) => {\r\n        return state.items.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    cartTotalPrice: (state) => {\r\n        return state.items.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\r\n    },\r\n};"],"mappings":";;;;;AAAA,OAAO,MAAMA,UAAU,GAAG,IAAI;AAC9B,MAAMC,sBAAsB,GAAIC,SAAS,IAAK;EAC1CC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAAC;AAC3D,CAAC;AAED,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;EAClC,MAAML,SAAS,GAAGC,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC;EAC9C,OAAON,SAAS,GAAGG,IAAI,CAACI,KAAK,CAACP,SAAS,CAAC,GAAG,EAAE;AACjD,CAAC;AACD,OAAO,MAAMQ,KAAK,GAAG;EACjBC,KAAK,EAAEJ,uBAAuB,CAAC;AACnC,CAAC;AACD,OAAO,MAAMK,SAAS,GAAG;EACrBC,oBAAoBA,CAACH,KAAK,EAAEI,OAAO,EAAE;IACjCJ,KAAK,CAACC,KAAK,CAACI,IAAI,CAAC;MAAE,GAAGD,OAAO;MAAEE,QAAQ,EAAE;IAAE,CAAC,CAAC;IAC7Cf,sBAAsB,CAACS,KAAK,CAACC,KAAK,CAAC;EACvC,CAAC;EACDM,uBAAuBA,CAACP,KAAK,EAAEQ,QAAQ,EAAE;IACrCA,QAAQ,CAACF,QAAQ,EAAE;IACnBf,sBAAsB,CAACS,KAAK,CAACC,KAAK,CAAC;EACvC,CAAC;EACDQ,qBAAqBA,CAACT,KAAK,EAAEU,SAAS,EAAE;IACpCV,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;IACjEnB,sBAAsB,CAACS,KAAK,CAACC,KAAK,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMa,OAAO,GAAG;EACnBC,gBAAgBA,CAAC;IAAEf,KAAK;IAAEgB;EAAO,CAAC,EAAEZ,OAAO,EAAE;IACzC,MAAMI,QAAQ,GAAGR,KAAK,CAACC,KAAK,CAACgB,IAAI,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,CAAC;IACnE,IAAIL,QAAQ,EAAE;MACVQ,MAAM,CAAC,yBAAyB,EAAER,QAAQ,CAAC;IAC/C,CAAC,MAAM;MACHQ,MAAM,CAAC,sBAAsB,EAAEZ,OAAO,CAAC;IAC3C;EACJ,CAAC;EACDc,qBAAqBA,CAAC;IAAEF;EAAO,CAAC,EAAEN,SAAS,EAAE;IACzCM,MAAM,CAAC,uBAAuB,EAAEN,SAAS,CAAC;EAC9C;AACJ,CAAC;AACD,OAAO,MAAMS,OAAO,GAAG;EACnB3B,SAAS,EAAGQ,KAAK,IAAKA,KAAK,CAACC,KAAK;EACjCmB,aAAa,EAAGpB,KAAK,IAAK;IACtB,OAAOA,KAAK,CAACC,KAAK,CAACoB,MAAM,CAAC,CAACC,KAAK,EAAEV,IAAI,KAAKU,KAAK,GAAGV,IAAI,CAACN,QAAQ,EAAE,CAAC,CAAC;EACxE,CAAC;EACDiB,cAAc,EAAGvB,KAAK,IAAK;IACvB,OAAOA,KAAK,CAACC,KAAK,CAACoB,MAAM,CAAC,CAACC,KAAK,EAAEV,IAAI,KAAKU,KAAK,GAAGV,IAAI,CAACY,KAAK,GAAGZ,IAAI,CAACN,QAAQ,EAAE,CAAC,CAAC,CAACmB,OAAO,CAAC,CAAC,CAAC;EAChG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}