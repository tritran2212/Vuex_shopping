{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      product: null\n    };\n  },\n  computed: {\n    ...mapGetters('products', ['getProductById'])\n  },\n  methods: {\n    ...mapActions('cart', ['addProductToCart']),\n    loadProduct() {\n      const p = this.getProductById(this.id);\n      if (p) {\n        this.product = p;\n      } else {\n        this.$store.dispatch('products/fetchAll').then(() => {\n          this.product = this.getProductById(this.id);\n        });\n      }\n    },\n    addToCart() {\n      this.addProductToCart(this.getProductById(this.id));\n      alert('Đã thêm vào giỏ hàng!');\n    }\n  },\n  created() {\n    this.loadProduct();\n  },\n  watch: {\n    '$route.params.id': 'loadProduct'\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","data","product","computed","methods","loadProduct","p","getProductById","id","$store","dispatch","then","addToCart","addProductToCart","alert","created","watch"],"sources":["src/views/ProductDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail-view\">\r\n    <div v-if=\"!product\">Đang tải sản phẩm...</div>\r\n    <div v-else class=\"product-content\">\r\n      <img :src=\"product.image\" :alt=\"product.title\" class=\"product-image\" />\r\n      <div class=\"product-info\">\r\n        <h1>{{ product.title }}</h1>\r\n        <p class=\"category\">{{ product.category }}</p>\r\n        <p class=\"price\">${{ product.price }}</p>\r\n        <p class=\"description\">{{ product.description }}</p>\r\n        <button @click=\"addToCart\" class=\"add-to-cart-btn\">Thêm vào giỏ hàng</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  props: ['id'],\r\n  data() {\r\n    return {\r\n      product: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('products', ['getProductById']),\r\n  },\r\n  methods: {\r\n    ...mapActions('cart', ['addProductToCart']),\r\n    loadProduct() {\r\n      const p = this.getProductById(this.id);\r\n      if (p) {\r\n        this.product = p;\r\n      } else {\r\n        this.$store.dispatch('products/fetchAll').then(() => {\r\n          this.product = this.getProductById(this.id);\r\n        });\r\n      }\r\n    },\r\n    addToCart() {\r\n      this.addProductToCart(this.getProductById(this.id));\r\n      alert('Đã thêm vào giỏ hàng!');\r\n    },\r\n  },\r\n  created() {\r\n    this.loadProduct();\r\n  },\r\n  watch: {\r\n    '$route.params.id': 'loadProduct',\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-detail-view { padding: 2rem; }\r\n.product-content { display: grid; grid-template-columns: 1fr 2fr; gap: 2rem; }\r\n.product-image { max-width: 100%; }\r\n.category { text-transform: capitalize; color: #777; }\r\n.price { font-size: 2rem; font-weight: bold; }\r\n.add-to-cart-btn { background: #42b983; color: white; border: none; padding: 1rem 2rem; cursor: pointer; font-size: 1rem; }\r\n</style>"],"mappings":"AAiBA,SAAAA,UAAA,EAAAC,UAAA;AAEA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAL,UAAA;EACA;EACAM,OAAA;IACA,GAAAL,UAAA;IACAM,YAAA;MACA,MAAAC,CAAA,QAAAC,cAAA,MAAAC,EAAA;MACA,IAAAF,CAAA;QACA,KAAAJ,OAAA,GAAAI,CAAA;MACA;QACA,KAAAG,MAAA,CAAAC,QAAA,sBAAAC,IAAA;UACA,KAAAT,OAAA,QAAAK,cAAA,MAAAC,EAAA;QACA;MACA;IACA;IACAI,UAAA;MACA,KAAAC,gBAAA,MAAAN,cAAA,MAAAC,EAAA;MACAM,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAV,WAAA;EACA;EACAW,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}